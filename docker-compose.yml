x-n8n: &service-n8n
  image: n8nio/n8n:latest
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_PASSWORD}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    - N8N_USER_MANAGEMENT_JWT_SECRET
  links:
    - db

x-ollama: &service-ollama
  image: ollama/ollama:latest
  volumes:
    - ollama_storage:/root/.ollama

services:
  db:
    container_name: postgres
    image: timescale/timescaledb-ha:pg17
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - POSTGRES_USER=${POSTGRES_NON_ROOT_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    command: [ "-c", "ai.ollama_host=ollama:11434" ]
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10
  n8n:
    <<: *service-n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./content:/content:rw
    depends_on:
      db:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully
  n8n-import:
    <<: *service-n8n
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --input=/backup/credentials/credentials.json && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - ./n8n/backup:/backup
    depends_on:
      db:
        condition: service_healthy
  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
      - ./webui.db:/app/backend/data/webui.db
    ports:
      - 3001:8080
    environment:
      - 'OLLAMA_BASE_URL=http://localhost:11434'
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: always
  ollama:
    <<: *service-ollama
    restart: unless-stopped
    container_name: ollama
    ports:
      - 11434:11434
  ollama-pull:
    <<: *service-ollama
    container_name: ollama-pull
    entrypoint: /bin/sh
    command:
      - "-c"
      - "sleep 3; OLLAMA_HOST=ollama:11434 ollama pull qwen2.5:7b; OLLAMA_HOST=ollama:11434 ollama pull nomic-embed-text"
    depends_on:
      - ollama

volumes:
  db_storage:
  n8n_storage:
  qdrant_storage:
  open-webui:
  ollama_storage: